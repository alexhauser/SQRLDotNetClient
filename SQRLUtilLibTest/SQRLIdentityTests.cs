using System;
using System.Collections.Generic;
using System.Text;
using Xunit;
using SQRLUtilsLib;

namespace SQRLUtilLibTest
{
    public class SQRLIdentityTests
    {
        [Fact]
        public async void FromToByteArrayTest()
        {
            List<byte[]> idVectors = new List<byte[]>()
            {
                // "Ordinary" identity containing block 1 + 2
                Sodium.Utilities.HexToBinary("7371726C646174617D0001002D003DF8C1D0D35425CBABE1ECEA13100FCDA8CE1EE9CC6C88A0F512D5F60991000000F30104050F00B10BC086752714EF4AC4330015268AF7716F8AA231C7F912D217189D37BEC4F82CBFF30D7ADC9ECF361E9236BC5E66FCBB6B75E6B7B23D5543F3DC78B50071C77A6CED382249904789E1F6341A91E9DC490002002FBE0BA95BD8FF50053728A565DD3EEF0995000000E64C5A1EDDB214D6B2886AC3FDA1E831C3DDFDD6405035F69E1AFAD21464C75E98CCD59C5A8BE47E39F2A39F2D10D3BA"),
                // Rekeyed 4 times, thus containing a large block 3
                Sodium.Utilities.HexToBinary
                // .sqrc-File (containing only block 2)
                Sodium.Utilities.HexToBinary("7371726C64617461490002002DD4DEA2238AFF0A553C76AADE9488A309960000006CC320A5DF90DEF5E3F8DCF460B6A5490E7C4CABB93926B0B79D850582C88DE1E698A4F03CC93926CA0015D673DB1686"),
                //Custom block (contains a custom block of imaginary type 55, which should be retained)
                Sodium.Utilities.HexToBinary("7371726C646174617D0001002D005B6648EBCC4E296A4CBF479E43C67DDBBBCCEBF73E1D5939D18758D3091F000000F30104050F002C6258339401919F4BA3C1B904174BCA18ED3DC25560637D684A2A7C19761709AED12E480CCED7B0D8B21FC13B773578ABA9EC6838B1ED4D110787EFEB9740EFF40536CC5F598A5714EBBF6E2946F0934900020002D86D2A4CEDC1C91951E5410A5DE3CC09200000000752657E822696708F7DCC96D0AD911C0184BD8A06DE16C7509CED8762B53EBAEEA49CB089449204317437BECC5956DB1500370074657374696E67206974206F7574212129")
            };

            foreach (var idVector in idVectors)
            {
                SQRLIdentity id = SQRLIdentity.FromByteArray(idVector);
                byte[] result = id.ToByteArray();

                Assert.Equal(idVector, result);
            }
        }
    }
}
